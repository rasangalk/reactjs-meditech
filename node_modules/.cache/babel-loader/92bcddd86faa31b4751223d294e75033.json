{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rasanga\\\\Desktop\\\\meditech\\\\reactjs-meditech\\\\src\\\\Components\\\\EmployeeLogin.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmployeeLogin() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const history = useHistory();\n\n  const Button = () => {\n    _s();\n\n    const [clicked, setClicked] = useState(false);\n    useEffect(() => {\n      if (clicked) {\n        // do something meaningful, Promises, if/else, whatever, and then\n        window.location.assign(\"http://github.com\");\n      }\n    });\n\n    const handleLogin = () => {\n      let employee = {\n        email: email,\n        password: password\n      };\n      axios.post(\"http://localhost:3004/employee/login\", employee).then(res => {\n        toast.success(\"loged successfully\");\n\n        if (res.data.role === \"pharmacist\") {\n          history.push(\"/employee-manager/home\");\n        } else {\n          console.log(res.data);\n        }\n      }).catch(res => toast.error(\"Error registering\"));\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n        position: \"top-right\",\n        autoClose: 4914,\n        hideProgressBar: false,\n        newestOnTop: false,\n        closeOnClick: true,\n        rtl: false,\n        pauseOnFocusLoss: true,\n        draggable: true,\n        pauseOnHover: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: e => {\n          setEmail(e.target.value);\n        },\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        onChange: e => {\n          setPassword(e.target.value);\n        },\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleLogin,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setClicked(true),\n        children: \"go around\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this);\n  };\n\n  _s(Button, \"Itt7OuTiZkgguumxX/BSsgcZLB8=\");\n}\n\n_s2(EmployeeLogin, \"wM3EPS4uV1C1o/nWmVjNjLYBNe0=\", false, function () {\n  return [useHistory];\n});\n\n_c = EmployeeLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeLogin\");","map":{"version":3,"sources":["C:/Users/Rasanga/Desktop/meditech/reactjs-meditech/src/Components/EmployeeLogin.jsx"],"names":["React","useEffect","useState","axios","ToastContainer","toast","Link","NavLink","useHistory","EmployeeLogin","email","setEmail","password","setPassword","history","Button","clicked","setClicked","window","location","assign","handleLogin","employee","post","then","res","success","data","role","push","console","log","catch","error","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function EmployeeLogin() {\r\n\tconst [email, setEmail] = useState();\r\n\tconst [password, setPassword] = useState();\r\n\tconst history = useHistory();\r\n\r\n\tconst Button = () => {\r\n\t\tconst [clicked, setClicked] = useState(false);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tif (clicked) {\r\n\t\t\t\t// do something meaningful, Promises, if/else, whatever, and then\r\n\t\t\t\twindow.location.assign(\"http://github.com\");\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst handleLogin = () => {\r\n\t\t\tlet employee = {\r\n\t\t\t\temail: email,\r\n\t\t\t\tpassword: password,\r\n\t\t\t};\r\n\t\t\taxios\r\n\t\t\t\t.post(\"http://localhost:3004/employee/login\", employee)\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\ttoast.success(\"loged successfully\");\r\n\t\t\t\t\tif (res.data.role === \"pharmacist\") {\r\n\t\t\t\t\t\thistory.push(\"/employee-manager/home\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(res => toast.error(\"Error registering\"));\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<ToastContainer\r\n\t\t\t\t\tposition='top-right'\r\n\t\t\t\t\tautoClose={4914}\r\n\t\t\t\t\thideProgressBar={false}\r\n\t\t\t\t\tnewestOnTop={false}\r\n\t\t\t\t\tcloseOnClick\r\n\t\t\t\t\trtl={false}\r\n\t\t\t\t\tpauseOnFocusLoss\r\n\t\t\t\t\tdraggable\r\n\t\t\t\t\tpauseOnHover\r\n\t\t\t\t/>\r\n\t\t\t\t<label>email</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\tsetEmail(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t/>\r\n\t\t\t\t<label>password</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\tsetPassword(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t/>\r\n\t\t\t\t<button type='submit' onClick={handleLogin}>\r\n\t\t\t\t\tsubmit\r\n\t\t\t\t</button>\r\n\t\t\t\t<button onClick={() => setClicked(true)}>go around</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n"]},"metadata":{},"sourceType":"module"}